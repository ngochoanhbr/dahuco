//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SinGooCMS.Control.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SinGooCMS.Control.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap Archiving {
            get {
                object obj = ResourceManager.GetObject("Archiving", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap blank {
            get {
                object obj = ResourceManager.GetObject("blank", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap closefolder {
            get {
                object obj = ResourceManager.GetObject("closefolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static byte[] expressInstall {
            get {
                object obj = ResourceManager.GetObject("expressInstall", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Flvplayer {
            get {
                object obj = ResourceManager.GetObject("Flvplayer", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Bitmap forbidclosefolder {
            get {
                object obj = ResourceManager.GetObject("forbidclosefolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap forbidopenfolder {
            get {
                object obj = ResourceManager.GetObject("forbidopenfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap halfcolsefolder {
            get {
                object obj = ResourceManager.GetObject("halfcolsefolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap halfopenfolder {
            get {
                object obj = ResourceManager.GetObject("halfopenfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap I {
            get {
                object obj = ResourceManager.GetObject("I", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap L {
            get {
                object obj = ResourceManager.GetObject("L", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Lminus {
            get {
                object obj = ResourceManager.GetObject("Lminus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap lockclosefolder {
            get {
                object obj = ResourceManager.GetObject("lockclosefolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap lockopenfolder {
            get {
                object obj = ResourceManager.GetObject("lockopenfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Lplus {
            get {
                object obj = ResourceManager.GetObject("Lplus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static byte[] modieus {
            get {
                object obj = ResourceManager.GetObject("modieus", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Bitmap openArchiving {
            get {
                object obj = ResourceManager.GetObject("openArchiving", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap openfolder {
            get {
                object obj = ResourceManager.GetObject("openfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap openfolder1 {
            get {
                object obj = ResourceManager.GetObject("openfolder1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap outlink {
            get {
                object obj = ResourceManager.GetObject("outlink", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static byte[] player {
            get {
                object obj = ResourceManager.GetObject("player", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Bitmap purviewclosefolder {
            get {
                object obj = ResourceManager.GetObject("purviewclosefolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap purviewopenfolder {
            get {
                object obj = ResourceManager.GetObject("purviewopenfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap singlepage {
            get {
                object obj = ResourceManager.GetObject("singlepage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /* SWFObject v2.1 &lt;http://code.google.com/p/swfobject/&gt;
        ///	Copyright (c) 2007-2008 Geoff Stearns, Michael Williams, and Bobby van der Sluis
        ///	This software is released under the MIT License &lt;http://www.opensource.org/licenses/mit-license.php&gt;
        ///*/
        ///var swfobject=function(){var b=&quot;undefined&quot;,Q=&quot;object&quot;,n=&quot;Shockwave Flash&quot;,p=&quot;ShockwaveFlash.ShockwaveFlash&quot;,P=&quot;application/x-shockwave-flash&quot;,m=&quot;SWFObjectExprInst&quot;,j=window,K=document,T=navigator,o=[],N=[],i=[],d=[],J,Z=null,M=null,l=null,e=false,A=false;var h=function [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string swfobject {
            get {
                return ResourceManager.GetString("swfobject", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap T {
            get {
                object obj = ResourceManager.GetObject("T", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Tminus {
            get {
                object obj = ResourceManager.GetObject("Tminus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Tplus {
            get {
                object obj = ResourceManager.GetObject("Tplus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /*	Unobtrusive Flash Objects (UFO) v3.21 &lt;http://www.bobbyvandersluis.com/ufo/&gt;
        ///	Copyright 2005, 2006 Bobby van der Sluis
        ///	This software is licensed under the CC-GNU LGPL &lt;http://creativecommons.org/licenses/LGPL/2.1/&gt;
        ///*/
        ///
        ///var UFO = {
        ///	req: [&quot;movie&quot;, &quot;width&quot;, &quot;height&quot;, &quot;majorversion&quot;, &quot;build&quot;],
        ///	opt: [&quot;play&quot;, &quot;loop&quot;, &quot;menu&quot;, &quot;quality&quot;, &quot;scale&quot;, &quot;salign&quot;, &quot;wmode&quot;, &quot;bgcolor&quot;, &quot;base&quot;, &quot;flashvars&quot;, &quot;devicefont&quot;, &quot;allowscriptaccess&quot;, &quot;seamlesstabbing&quot;, &quot;allowfullscreen&quot;],
        ///	optAtt: [&quot;id&quot;, &quot;name&quot;, &quot;align&quot;] [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ufo {
            get {
                return ResourceManager.GetString("ufo", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap WebSite {
            get {
                object obj = ResourceManager.GetObject("WebSite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///
        ///webFXTreeConfig.loadingText=&quot;加载中...&quot;;
        ///webFXTreeConfig.loadErrorTextTemplate=&quot;Error loading \&quot;%1%\&quot;&quot;;
        ///webFXTreeConfig.emptyErrorTextTemplate=&quot;Error \&quot;%1%\&quot; does not contain any tree items&quot;;
        ///
        ///function WebFXLoadTree(sText,sXmlSrc,sAction,sBehavior,sIcon,sOpenIcon){
        ///	this.WebFXTree=WebFXTree;
        ///	this.WebFXTree(sText,sAction,sBehavior,sIcon,sOpenIcon);
        ///	this.src=sXmlSrc;
        ///	this.loading=false;
        ///	this.loaded=false;
        ///	this.errorText=&quot;&quot;;
        ///	if(this.open)
        ///		_startLoadXmlTree(this.src,this);
        ///	else{
        ///		this._ [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xloadtree {
            get {
                return ResourceManager.GetString("xloadtree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 .webfx-menu {
        ///	box-sizing: content-box; moz-box-sizing: content-box;
        ///}
        ///.webfx-menu {
        ///	box-sizing: content-box; moz-box-sizing: content-box;
        ///}
        ///.webfx-menu {
        ///	border-right: #999999 1px solid;
        ///	padding-right: 1px; border-top: #999999 1px solid;
        ///	padding-left: 1px; z-index: 100; 
        ///	background: #f1f1f1; filter: progid:DXImageTransform.Microsoft.Shadow(color=&quot;#777777&quot;, Direction=135, Strength=4);
        ///	visibility: hidden; padding-bottom: 1px; border-left: #999999 1px solid; width: 150px; padding-top: 1px; bo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xmenu {
            get {
                return ResourceManager.GetString("xmenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///
        ///
        ///webfxMenuDefaultWidth=150;
        ///webfxMenuDefaultBorderWidth=2;
        ///webfxMenuDefaultPaddingWidth=2;
        ///webfxMenuDefaultBorderTop=1;
        ///webfxMenuDefaultPaddingTop=1;
        ///webfxMenuItemDefaultHeight=18;
        ///webfxMenuItemDefaultText=&quot;Untitled&quot;;
        ///webfxMenuItemDefaultHref=&quot;javascript:void(0)&quot;;
        ///webfxMenuSeparatorDefaultHeight=6;
        ///webfxMenuDefaultImagePath=&quot;&quot;;
        ///webfxMenuDefaultEmptyText=&quot;Empty&quot;;
        ///
        ///var op=/opera 5|opera\/5/i.test(navigator.userAgent);
        ///var ie=!op&amp;&amp;/msie/i.test(navigator.userAgent);
        ///var mz=!op&amp;&amp;/mozilla\/5/i. [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xmenu1 {
            get {
                return ResourceManager.GetString("xmenu1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 //////////////////
        ///// Helper Stuff //
        /////////////////////
        ///
        ///function getDomDocumentPrefix(){
        ///	if(getDomDocumentPrefix.prefix)
        ///		return getDomDocumentPrefix.prefix;
        ///		
        ///	var prefixes=[&quot;MSXML2&quot;,&quot;Microsoft&quot;,&quot;MSXML&quot;,&quot;MSXML3&quot;];
        ///	var o;
        ///	for(var i=0;i&lt;prefixes.length;i++){
        ///		try{
        ///			o=new ActiveXObject(prefixes[i]+&quot;.DomDocument&quot;);
        ///			return getDomDocumentPrefix.prefix=prefixes[i]
        ///		}catch(ex){}
        ///	}
        ///	
        ///	throw new Error(&quot;Could not find an installed XML parser&quot;);
        ///}
        ///
        ///function getXmlHttpPrefix(){
        ///	if(g [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xmlextras {
            get {
                return ResourceManager.GetString("xmlextras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 .webfx-tree-container {
        ///	margin: 0px;
        ///	padding: 0px;
        ///	font: icon;
        ///	white-space: nowrap;
        ///}
        ///
        ///.webfx-tree-item {
        ///	padding: 0px;
        ///	margin: 0px;
        ///	font: icon;
        ///	color: WindowText;
        ///	white-space: nowrap;
        ///	height: 16px;
        ///}
        ///
        ///.webfx-tree-item a, .webfx-tree-item a:active, .webfx-tree-item a:hover {
        ///	margin-left: 3px;
        ///	padding: 0px 2px 1px 2px;
        ///}
        ///
        ///.webfx-tree-item a {
        ///	color: black;
        ///	text-decoration: none;
        ///}
        ///
        ///.webfx-tree-item a:hover {
        ///	color: blue;
        ///	text-decoration: underline;
        ///}
        ///
        ///.webfx-tre [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xtree {
            get {
                return ResourceManager.GetString("xtree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///var webFXTreeConfig = {
        ///	rootIcon:			&apos;images/foldericon.png&apos;,
        ///	openRootIcon:		&apos;images/openfoldericon.png&apos;,
        ///	folderIcon:			&apos;images/foldericon.png&apos;,
        ///	openFolderIcon:		&apos;images/openfoldericon.png&apos;,
        ///	fileIcon:			&apos;images/file.png&apos;,
        ///	iIcon:				&apos;images/I.png&apos;,
        ///	lIcon:				&apos;images/L.png&apos;,
        ///	lMinusIcon:			&apos;images/Lminus.png&apos;,
        ///	lPlusIcon:			&apos;images/Lplus.png&apos;,
        ///	tIcon:				&apos;images/T.png&apos;,
        ///	tMinusIcon:			&apos;images/Tminus.png&apos;,
        ///	tPlusIcon:			&apos;images/Tplus.png&apos;,
        ///	blankIcon:			&apos;images/blank.png&apos;,
        ///	defaultText:		 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string xtree1 {
            get {
                return ResourceManager.GetString("xtree1", resourceCulture);
            }
        }
    }
}
